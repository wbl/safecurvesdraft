./" 11/10/08 Template updated to align with Copyright Notice as
./" defined in RFC 5378 (BCP 78).
.pl 10.0i
.po 0
.ll 7.2i
.lt 7.2i
.nr LL 7.2i
.nr LT 7.2i
.ds RF FORMFEED[Page %]
.ds LH Internet Draft
.\"   --> Header/footers: Set short title, author(s), and dates:
.ds CH ladd-safecurves                  \" <Short title>
.ds LF Ladd, Watson                    \" <Authors>
.ds RH 8 January 2014                 \" <Submission date>
.ds CF Expires 9 July 2014               \" <Expiration date>
.hy 0
.ad l
.nf
.\" 5678901234567 check 72 column width 12345678901234567890123456789012
Internet Draft                                                   W. Ladd
<draft-ladd-safecurves-03.txt>                              Grad Student
Category: Informational                                      UC Berkeley
Expires 14 July 2014                                     10 January 2014

.ce
Additional Elliptic Curves for IETF protocols
.ce
<draft-ladd-safecurves-03.txt>

.in 3              \"  Basic indent for text is 3 spaces
.ti 0              \"  "Temporary indent" for next line: 0 spaces
Status of this Memo

Distribution of this memo is unlimited.

This Internet-Draft is submitted in full conformance with the provisions
of BCP 78 and BCP 79.

Internet-Drafts are working documents of the Internet Engineering
Task Force (IETF), its areas, and its working groups.  Note that
other groups may also distribute working documents as Internet-
Drafts.

Internet-Drafts are draft documents valid for a maximum of six months
and may be updated, replaced, or obsoleted by other documents at any
time.  It is inappropriate to use Internet-Drafts as reference
material or to cite them other than as "work in progress."

The list of current Internet-Drafts can be accessed at
http://www.ietf.org/ietf/1id-abstracts.txt.

The list of Internet-Draft Shadow Directories can be accessed at
http://www.ietf.org/shadow.html.

This Internet-Draft will expire on 9 July 2014.

.ti 0
Copyright Notice

Copyright (c) 2014 IETF Trust and the persons identified as
the document authors.  All rights reserved.   

This document is subject to BCP 78 and the IETF Trust's Legal
Provisions Relating to IETF Documents
(http://trustee.ietf.org/license-info) in effect on the date of
publication of this document.  Please review these documents
carefully, as they describe your rights and restrictions with respect
to this document.
 
.ti 0
Abstract          \"  See: "Instructions to RFC Authors [RFC2223BIS]"

This Internet draft contains curves on which Decisional Diffie-Hellman
problem is hard, and which have implementation advantages.

.bp
.in 0
Table of Contents

.nf
   1. Introduction ....................................................3
   2. The curves ......................................................3
   3. Explicit Formulas ...............................................4
   4. Point Encoding ..................................................6
   5. Security Considerations .........................................6
   6. IANA Considerations .............................................7
   7. Acknowledgements ................................................7
.fi
.in 3 
.ti 0
1. Introduction

This document contains a set of elliptic curves over prime fields with
many security and performance advantages. They are twist-secure, have
large prime order subgroups, high embedding degree, endomorphism rings
of large discriminant, complete formulas, and primes selected for fast
arithmetic.

These curves have been generated in a rigid manner by computer
search. As such there is very little risk that these curves were
selected to exhibit weaknesses to attacks not in the open
literature. The field is the only free choice, and in all
circumstances has been picked to enable highly efficient
arithmetic. Proofs of all properties claimed exist in [SAFECURVES]. It
is easier to avoid known implementation issues with these curves then
short Weierstrass curves.

.ti 0
2. The Curves

Each curve is given by an equation and a basepoint, together with an
order of the point and cofactor.

Curve1174 is a curve over GF(2^251-9), formula x^2+y^2=1-1174x^2y^2,
basepoint (158261909772591154195454700645373976338109
1388846394833492296309729998839514,
30375380136041545047641157286514376465
19513534305223422754827055689195992590), order 2^249 -
11332719920821432534773113288178349711, cofactor 4.

Curve25519 is a curve over GF(2^255-19), formula y^2=x^3+486662x^2+x,
basepoint (9, 147816194475895447910205935684099868872646
06134616475288964881837755586237401), order 2^252 +
27742317777372353535851937790883648493, cofactor 8.

E382 is a curve over GF(2^382-105), formula x^2+y^2=1-67254x^2y^2,
basepoint (3914921414754292646847594472454013487047
137431784830634731377862923477302047857640522480241
298429278603678181725699, 17), order 2^380 -
1030303207694556153926491950732314247062623204330168346855, cofactor
4.

M383 is a curve over GF(2^383-187), formula y^2=x^3+2065150x^2+x,
basepoint (12,
473762340189175399766054630037590257683961716725770372563038
9791524463565757299203154901655432096558642117242906494), order 2^380
+ 166236275931373516105219794935542153308039234455761613271, cofactor
8.

Curve3617 is a curve over GF(2^414-17), formula x^2+y^2=1+3617x^2y^2,
basepoint
(17319886477121189177719202498822615443556957307604340815256226
171904769976866975908866528699294134494857887698432266169206165, 34),
order 2^411 -
33364140863755142520810177694098385178984727200411208589594759,
cofactor 8.

Ed448-Goldilocks is a curve over GF(2^448-2^224-1), formula
x^2+y^2=1-39081x^2y^2, basepoint
(1178121612634369467372824843433100646651805353570163734168790821
47939404277809514858788439644911793978499419995990477371552926
308078495,
19), order 2^446 -
13818066809895115352007386748515426880336692474882178609894547503885,
cofactor 4.

M511 is a curve over GF(2^511-187), formula y^2 = x^3+530438x^2+x,
basepoint (5,
25004106455650724233689811491392132522115686851736085900709792642
48275228603899706950518127817176591878667784247582124505430745177
116625808811349787373477), order 2^508 +
107247547596357476240445315140681218420707566274348330289655408
08827675062043, cofactor 8.

E521 is a curve over GF(2^521-1), formula x^2+y^2=1-376014x^2y^2,
basepoint
(1571054894184995387535939749894317568645297350402905821437625
18115230499438118852963259119606760410077267392791511426719338990
5003276673749012051148356041324, 12), order 2^519 -
3375547632585017057891076304187826360719049612140512266186351500
85779108655765, cofactor 4.

.ti 0
3. Explicit Formulas

On Montgomery curves, curves of the form y^2=x^3+Ax^2+x, the typical
technique is to work over the Kummer curve instead, i.e. drop y
coordinates for use in Diffie-Hellman. Let (X_1,Z_1), (X_2,Z_2),
(X_3,Z_3) be coordinates such that X_1/Z_1, X_2/Z_2, X_3/Z_3 are the x
coordinates of P, Q, and P+Q respectively. Then the equations
.nf
     A = X2+Z2
     AA = A^2
     B = X2 - Z2
     BB = B^2
     E = AA - BB
     C = X3 + Z3
     D = X3 - Z3
     DA = D*A
     CB = C*B
     X5 = Z1*(DA+CB)^2
     Z5 = X1*(DA-CB)^2
     X4 = AA*BB
     Z4 = E*(BB+a24*E)
.fi

gives X_4/Z_4 as the x coordinate of [2]Q, and X_5/Z_5 as the x
coordinate of P+[2]Q where a24=(A+2)/4. 

In implementations which make use of this trick, there is no need to
validate the x coordinate as the twist is also secure. This is the
preferred way to implement ECDH. The formulas were introduced in
[MONTGOMERY].

On Edwards curves, curves of the form, x^2+y^2=1+dx^2y^2 a complete
addition formula, which works for doubling as well, is given by
representing points in projective coordinates. The formula for adding
(X_1, Y_1, Z_1) to (X_2, Y_2, Z_2) is then
.nf
      A = Z1*Z2
      B = A^2
      C = X1*X2
      D = Y1*Y2
      E = d*C*D
      F = B-E
      G = B+E
      X3 = A*F*((X1+Y1)*(X2+Y2)-C-D) 
      Y3 = A*G*(D-C)
      Z3 = F * G
.fi

These formulas are from the [EFD], reporting results in [BL07].

Using these formulas the standard double-and-add algorithm or
Montgomery ladder recurrence can be used to compute multiples of
points without side channels in a straightforward manner.

Concretely, to calculate [n]P by double and add one lets Q_i=2Q_{i-1},
then adds the points Q_i for which the relevant bit of n is set. To
compute [n]P by the Montgomery ladder, one recursively computes
[n+1]P, [n]P from [floor(n/2)+1]P, [floor(n/2)]P. The initial P is
reused as the difference in all invocations of the differential add
and double primitive.  This recursive method can be recast as an
iterative one easily.

The Montgomery curve formulas require only the x coordinate. Protocols
based on ECDH should give strong consideration to transmitting only
the x coordinate, in which case no validation is required. One is
technically working on the Kummer curve instead but there is no loss
of security, nor a need to worry about the algebraic details implied.
The above addition formulas cannot be used to add independent points
on Montgomery curves, as they ignore the y coordinate
entirely. Implementations using Montgomery form should set the high
bit of their secret ECDH key to make the number of iterations
constant.

It is highly recommended that Edwards curve points are transmitted in
compressed form to avoid implementations with missing curve membership
checks from working.

.ti 0
4. Point Encoding

Let (x,y) be a point on M(GF_p), where M is a Montgomery curve. Then
let l=ceil[log(p)/log(256)]. A point is represented as l-bytes,
representing in big-endian radix 256 the minimal representative of [x]
modulo p. This representation works for the standard x-coordinate only
arithmetic for ECDH, but cannot be used for protocols requiring
addition.

Let (x,y) be a point on E(GF_p), where E is an Edwards Curve. Let
l=floor[log(p)/log(256)]+1. A point is represented as l bytes, l
representing in big-endian radix 256 the minimal representative of [y]
modulo p, and the top bit of the top byte set to equal the low bit of
x. Because we have always ensured that there is extra room in l than
is strictly required to represent y, we have room for the top bit to be
set.

To decompress points one computes x^2, and the two possible candidates
for x, then selects one using the additional bit.

Alternative encodings are used by existing software, and protocol
designers should be aware of this. Alternative encodings may be
useful if preexisting software is to be used without changes.

.ti 0
5. Security Considerations

This entire document discusses methods of implementing cryptography
securely.  The time for an attacker to break the DLP on these curves
is the square root of the group order with the best known
attacks. These curves are twist-secure, limiting the impact of
wrong-curve attacks on Montgomery ladders.

It is recommended that implementors use the Montgomery ladder on
Montgomery curves with x coordinate only to avoid side-channel attacks
when Diffie-Hellman is being used. In this mode, curve checks are not
required. On Edward curves, standard curve (but not group) membership
checks are required for ECDH to be secure. Implementors should
generate ECDH private keys as multiples of the cofactor. While the
impact of not doing so is slight, it should still be avoided.

These curves and cited formulas are complete, avoiding certain attacks
against naive implementations of ECC protocols. They have cofactor
greater than one, occasionally requiring slight adjustments to
protocols such as using multiples of the cofactor as keys for ECDH or
similar representations for signature schemes.

This is not an exhaustive discussion of security considerations
relating to the implementation of these curves. Implementors must be
familiar with cryptography to safely implement any cryptographic
standard, and this standard is no exception.

.ti 0
6. IANA Considerations

IANA should assign OIDs to these curves.

.ti 0
7. Acknowledgments

Thanks to Alyssa Rowan and Robert Ransom for catching transcription
and formula errors. Manuel Pegourie-Gonnard noticed suboptimal
formulas and corrected them, as well as inadvertent misstatements and
underspecifications. Thanks to the various members of the CFRG who
provided advice on the text, and to Michael Hamburg for discussing
adaption of the point encoding to Ed448-Goldilocks.

.ti 0
8. References

[BL07] Bernstein, Daniel J and Tanja Lange. ``Faster addition and doubling on
elliptic curves.'' Pages 29-50 in Kurosawa, Advances in Cryptology:ASIACRYPT 2007. Lecture Notes in Computer Science 4833, Springer 2007.

[EFD] Lange, Tanja. Explicit Formula
Database. http://www.hyperelliptic.org/EFD/g1p/index.html

[MONTGOMERY] Montgomery, Peter L. ``Speeding the Pollard and elliptic curves
methods of factorization''. Mathematics of Computation 48 (1987), 243-264.
MR 88e:11130.

[SAFECURVES] Berstein and Lange. Safecurves. safecurves.cr.yp.to
.ti 0
Author's Address
.nf
Watson Ladd
watsonbladd@gmail.com
Berkeley, CA

